# This docker-compose file is used with the end-to-end tests.
# It explicitly disables ES and Cerebro containers because
# they consume a lot of memory on the Github Actions runners
# and cause Cypress tests to be flaky.

# NOTE: The tags in this file get updated automatically via
# the update_tag script, just like the main docker-compose.yml

version: "3.8"

services:
  msa-front:
    depends_on:
      - msa-api
      - msa-ui
      - camunda
    healthcheck:
      test: ["CMD-SHELL", "curl -k --fail https://localhost"]
    image: ubiqube/msa2-front:7bc41c1606fc67e4345c400b86cf8c076fc1a199
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
      - target: 162
        published: 162
        protocol: udp
        mode: ingress
      - target: 69
        published: 69
        protocol: udp
        mode: ingress
      - "5200-5200:5200-5200/udp"
    networks:
      default:
        aliases:
          - "msa_front"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"
    #
    # uncomment this section when installing a custom certificate
    #
    # uncomment one of the 2 section below when installing a custom certificate
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  camunda:
    depends_on:
      - db
    image: ubiqube/msa2-camunda:23335a0df397d4bc3531366223cd5a239688ee0d
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"

  msa-ui:
    depends_on:
      - msa-api
    image: ubiqube/msa2-ui:e715ed6d39ea5603b373c24d9dcb243743937682
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_REPOSITORY=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_BPM=true
    - FEATURE_AI_ML=false
    - FEATURE_MICROSERVICE_BULK_OPERATION=true
    - FEATURE_EDIT_VARIABLES_IN_MICROSERVICE_CONSOLE=true
    - FEATURE_WORKFLOW_OWNER=false
    - FEATURE_PERMISSION_PROFILE_LABELS=false
    networks:
      default:
        aliases:
          - "msa_ui"

  db:
    image: ubiqube/msa2-db:5d83ffef0f6af44a5885a7bd34e732fba8b346ba
    healthcheck:
      test: ["CMD-SHELL", "/usr/pgsql-12/bin/pg_isready -h localhost"]
      timeout: 20s
    shm_size: 1g
    environment:
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
      KEY_VAULT_USER: key_vault
      KEY_VAULT_DB: key_vault
      PG_MODE: primary
      PG_PRIMARY_USER: postgres
      PG_PRIMARY_PASSWORD: my_db_password
      PG_USER: postgres
      PG_PASSWORD: my_db_password
      PG_DATABASE: POSTGRESQL
      PG_ROOT_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      MAX_CONNECTIONS: 1600
    volumes:
      - "/mnt/NASVolume/msa_db:/pgsqldata/pgsql"
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"

  db-replica:
    image: ubiqube/msa2-db:5d83ffef0f6af44a5885a7bd34e732fba8b346ba
    healthcheck:
      test: ["CMD-SHELL", "/usr/pgsql-12/bin/pg_isready -h localhost"]
      timeout: 20s
    environment:
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
      KEY_VAULT_USER: key_vault
      KEY_VAULT_DB: key_vault
      PG_MODE: replica
      PG_PRIMARY_USER: postgres
      PG_PRIMARY_PASSWORD: my_db_password
      PG_USER: postgres
      PG_PASSWORD: my_db_password
      PG_DATABASE: POSTGRESQL
      PG_ROOT_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      PG_PRIMARY_HOST: db
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"

  msa-api:
    depends_on:
      - db
    image: ubiqube/msa2-api:a7c649a66b89a9d24e97134bbcbd2f0ac61e7b44
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8480"]
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
      - UBIQUBE_CAPTCHA_SECRET_KEY=6LcFwjQfAAAAAFQSLf1dKYPoGtmaLOwoCPSzGl5k
      - UBIQUBE_SUNCHRO=no
      - UBIQUBE_BYPASS_CAPTCHA=true
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_api_logs:/opt/wildfly/logs/processLog"
      - "/mnt/NASVolume/msa_api_keystore:/etc/pki/jentreprise"
    networks:
      default:
        aliases:
          - "msa_api"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"

  msa-rsyslog:
    depends_on:
      - msa-sms
    image: ubiqube/msa2-rsyslog:c7981110f0ff1ee153199786f4abf3c8f5e49db7
    ports:
      - target: 514
        published: 514
        protocol: udp
        mode: ingress
      - target: 514
        published: 514
        protocol: tcp
        mode: ingress

  msa-sms:
    depends_on:
      - db
      - msa-es
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    image: ubiqube/msa2-sms:18b70bbc2b2958c70af0c321b2e33e97186f7a3b
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
      - CONTAINER_DOCKNAME={{.Task.Name}}.{{.Node.Hostname}}
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"
      - "/mnt/NASVolume/msa_bulkfiles:/opt/sms/spool/parser"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
          - "msa_sms"

  msa-alarm:
    depends_on:
      - db
      - msa-api
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-alarm status | grep -q 'service seems UP' || exit 1"]
    image: ubiqube/msa2-alarm:a9b92668c96ee4a90e5447eb5af1c20b21971787
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
      - CONTAINER_DOCKNAME={{.Task.Name}}.{{.Node.Hostname}}
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    networks:
      default:
        aliases:
          - "msa_alarm"

  msa-monitoring:
    depends_on:
      - db
      - msa-es
      - msa-dev
      - msa-api
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-poll status | grep -q 'service seems UP' || exit 1"]
    image: ubiqube/msa2-monitoring:dfcc122af6838113bd9964b6e2a7587098ca8242
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
      - CONTAINER_DOCKNAME={{.Task.Name}}.{{.Node.Hostname}}
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_monitbulkfiles:/opt/sms/spool/parser"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
          - "msa_monitoring"

  msa-bud:
    depends_on:
      - db
    image: ubiqube/msa2-bud:04590d19dafe4acc2742c9a365e9dbdb80e45dfc
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-bud status | grep -q 'service seems UP' || exit 1"]
    environment:
      - CONTAINER_DOCKNAME={{.Task.Name}}.{{.Node.Hostname}}
    deploy:
      replicas: 1
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    networks:
      default:
        aliases:
          - "msa_bud"

  msa-cerebro:
    image: ubiqube/msa2-cerebro:914750e000db1343d9972bfa6652da1efe4aa32f
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_USER: cerebro
      BASIC_AUTH_PWD: "N@X{M4tfw'5%)+35"
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      - msa-es
    ports:
      - "9000:9000"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    networks:
      default:
        aliases:
          - "msa_cerebro"

  msa-kibana:
    image: ubiqube/msa2-kibana:b5a0a64970f780ffddaf884f6bbff149431f0026
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://msa_es:9200
      - ELASTICSEARCH_HOSTS=http://msa_es:9200
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    networks:
      default:
        aliases:
          - "msa_kibana"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"

  msa-linux:
    image: ubiqube/msa2-linuxme:4981889b459e41c6dfe50699e51d839848fea9ba
    healthcheck:
      test: ["CMD-SHELL", "test -f /usr/bin/install_libraries.sh || echo false"]
    cap_add:
      - sys_rawio
    networks:
      default:
        aliases:
          - "msa_linux"

  msa-es:
    healthcheck:
      test: ["CMD-SHELL", "test -f /home/install/init-done && curl -s -XGET -H 'Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty' | grep -q 'status.*green' || exit 1"]
      interval: 60s
      start_period: 60s
    image: ubiqube/msa2-es:0bdbe159f733c75a5ea0696420ded038c87b5d6c
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
      - "discovery.type=single-node"
      - "script.painless.regex.enabled=true"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc="
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      default:
        aliases:
          - "msa_es"
    volumes:
     - "/mnt/NASVolume/msa_es:/usr/share/elasticsearch/data"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"

  msa-dev:
    image: ubiqube/msa2-linuxdev:aaa524220c8ae616d179e737c08a868a118ede2d
    depends_on:
      - msa-es
    healthcheck:
      test: ["CMD-SHELL", "test -f /usr/bin/install_libraries.sh || echo false"]
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    volumes:
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"
    networks:
      default:
        aliases:
          - "msa_dev"

networks:
  default:
#    driver_opts:
#      encrypted: "true"
